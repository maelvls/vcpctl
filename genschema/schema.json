{
  "$comments": "Inspired by https://api.venafi.cloud/v3/api-docs/account-service and https://api.venafi.cloud/v3/api-docs/vcamanagement-service",
  "$defs": {
    "AdvancedSettingsInformation": {
      "properties": {
        "enableIssuanceAuditLog": {
          "description": "Whether audit log entries must be generated for each issued certificate",
          "example": false,
          "type": "boolean"
        },
        "includeRawCertDataInAuditLog": {
          "description": "Whether the raw certificate data must be included in the audit log entry",
          "example": false,
          "type": "boolean"
        },
        "requireFIPSCompliantBuild": {
          "description": "Whether FIPS-compliant build is required",
          "example": false,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Application": {
      "description": "Application ID to associate with the service account",
      "format": "UUID",
      "type": "string",
      "x-go-type": "uuid.UUID",
      "x-go-type-import": {
        "path": "github.com/google/uuid"
      }
    },
    "AwsCloudProviderInformation": {
      "properties": {
        "accountIds": {
          "description": "Array of AWS account IDs each of which should be a 12-digit identifier",
          "example": 123456789012,
          "items": {
            "description": "Array of AWS account IDs each of which should be a 12-digit identifier",
            "example": "123456789012",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "regions": {
          "description": "Array of AWS regions",
          "example": "us-west-1",
          "items": {
            "description": "Array of AWS regions",
            "enum": [
              "us-east-1",
              "us-east-2",
              "us-west-1",
              "us-west-2",
              "af-south-1",
              "ap-east-1",
              "ap-south-2",
              "ap-southeast-3",
              "ap-southeast-4",
              "ap-south-1",
              "ap-northeast-3",
              "ap-northeast-2",
              "ap-southeast-1",
              "ap-southeast-2",
              "ap-northeast-1",
              "ca-central-1",
              "eu-central-1",
              "eu-west-1",
              "eu-west-2",
              "eu-south-1",
              "eu-west-3",
              "eu-south-2",
              "eu-north-1",
              "eu-central-2",
              "me-south-1",
              "me-central-1",
              "sa-east-1",
              "us-gov-east-1",
              "us-gov-west-1"
            ],
            "example": "us-west-1",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["accountIds", "regions"],
      "type": "object"
    },
    "AzureCloudProviderInformation": {
      "properties": {
        "subscriptionIds": {
          "description": "Array of Azure subscription IDs each of which should be UUID",
          "example": "8d10da13-8125-4ba9-a717-bf7490507b3d",
          "items": {
            "description": "Array of Azure subscription IDs each of which should be UUID",
            "example": "8d10da13-8125-4ba9-a717-bf7490507b3d",
            "format": "uuid",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": ["subscriptionIds"],
      "type": "object"
    },
    "ClientAuthenticationInformation": {
      "discriminator": {
        "propertyName": "type"
      },
      "oneOf": [
        {
          "$ref": "#/$defs/JwtJwksAuthenticationInformation"
        },
        {
          "$ref": "#/$defs/JwtOidcAuthenticationInformation"
        }
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "required": ["type"],
      "type": "object"
    },
    "ClientAuthorizationInformation": {
      "properties": {
        "customClaimsAliases": {
          "$ref": "#/$defs/CustomClaimsAliasesInformation"
        }
      },
      "type": "object"
    },
    "CloudProvidersInformation": {
      "properties": {
        "aws": {
          "$ref": "#/$defs/AwsCloudProviderInformation"
        },
        "azure": {
          "$ref": "#/$defs/AzureCloudProviderInformation"
        },
        "google": {
          "$ref": "#/$defs/GoogleCloudProviderInformation"
        }
      },
      "type": "object"
    },
    "CustomClaimsAliasesInformation": {
      "properties": {
        "allowAllPolicies": {
          "maxLength": 128,
          "type": "string"
        },
        "allowedPolicies": {
          "maxLength": 128,
          "type": "string"
        },
        "configuration": {
          "maxLength": 128,
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtendedConfigurationInformation": {
      "properties": {
        "advancedSettings": {
          "$ref": "#/$defs/AdvancedSettingsInformation"
        },
        "clientAuthentication": {
          "$ref": "#/$defs/ClientAuthenticationInformation"
        },
        "clientAuthorization": {
          "$ref": "#/$defs/ClientAuthorizationInformation"
        },
        "cloudProviders": {
          "$ref": "#/$defs/CloudProvidersInformation"
        },
        "companyId": {
          "description": "UUID specific to your company",
          "example": "03eb6e61-9806-11ed-84f2-c747fb71e467",
          "format": "uuid",
          "type": "string"
        },
        "creationDate": {
          "description": "When the configuration was initially created",
          "example": "2022-10-10T14:50:41.710+00:00",
          "type": "string"
        },
        "id": {
          "description": "UUID of the configuration",
          "example": "7268d820-a08d-11ed-bbc0-252385d6d389",
          "format": "uuid",
          "type": "string"
        },
        "longLivedCertCount": {
          "description": "Number of long lived certificates",
          "example": 2,
          "format": "int64",
          "type": "integer"
        },
        "minTlsVersion": {
          "description": "Minimum required TLS protocol version",
          "enum": ["TLS12", "TLS13"],
          "type": "string"
        },
        "modificationDate": {
          "description": "When the configuration was last modified",
          "example": "2023-12-12T20:00:10.500+00:00",
          "type": "string"
        },
        "name": {
          "description": "Name of the configuration",
          "example": "Some configuration",
          "type": "string"
        },
        "policies": {
          "items": {
            "$ref": "#/$defs/PolicyInformation"
          },
          "type": "array"
        },
        "serviceAccountIds": {
          "items": {
            "format": "uuid",
            "type": "string"
          },
          "type": "array"
        },
        "shortLivedCertCount": {
          "description": "Number of short lived certificates",
          "example": 20,
          "format": "int64",
          "type": "integer"
        },
        "subCaProvider": {
          "$ref": "#/$defs/SubCaProviderInformation"
        },
        "ultraShortLivedCertCount": {
          "description": "Number of ultra short lived certificates",
          "example": 200,
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudProviderInformation": {
      "properties": {
        "projectIdentifiers": {
          "description": "Array of Google project identifiers each of which should be a string with int64 number or 6 to 30 lowercase letters, digits, or hyphens, should start with a letter and not contain trailing hyphens",
          "example": "415104041262 or tokyo-rain-123",
          "items": {
            "description": "Array of Google project identifiers each of which should be a string with int64 number or 6 to 30 lowercase letters, digits, or hyphens, should start with a letter and not contain trailing hyphens",
            "example": "415104041262 or tokyo-rain-123",
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "regions": {
          "description": "Array of Google regions",
          "example": "us-west1-a",
          "items": {
            "description": "Array of Google regions",
            "enum": [
              "asia-east1",
              "asia-east2",
              "asia-northeast1",
              "asia-northeast2",
              "asia-northeast3",
              "asia-south1",
              "asia-south2",
              "asia-southeast1",
              "asia-southeast2",
              "australia-southeast1",
              "australia-southeast2",
              "europe-central2",
              "europe-north1",
              "europe-southwest1",
              "europe-west1",
              "europe-west12",
              "europe-west2",
              "europe-west3",
              "europe-west4",
              "europe-west6",
              "europe-west8",
              "europe-west9",
              "me-central1",
              "me-west1",
              "northamerica-northeast1",
              "northamerica-northeast2",
              "southamerica-east1",
              "southamerica-west1",
              "us-central1",
              "us-east1",
              "us-east4",
              "us-east5",
              "us-south1",
              "us-west1",
              "us-west2",
              "us-west3",
              "us-west4"
            ],
            "example": "us-west1-a",
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["projectIdentifiers", "regions"],
      "type": "object"
    },
    "JwtJwksAuthenticationInformation": {
      "allOf": [
        {
          "properties": {
            "urls": {
              "description": "Array JWT JWKS urls",
              "example": ["https://jwks.example.com"],
              "items": {
                "description": "Array JWT JWKS urls",
                "example": "[\"https://jwks.example.com\"]",
                "type": "string"
              },
              "minItems": 1,
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "required": ["urls"],
      "type": "object"
    },
    "JwtOidcAuthenticationInformation": {
      "allOf": [
        {
          "properties": {
            "audience": {
              "description": "OpenId audience",
              "example": "Client1",
              "maxLength": 256,
              "type": "string"
            },
            "baseUrl": {
              "description": "JWT OpenId base URL",
              "example": "[\"https://openid.example.com\"]",
              "maxLength": 256,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "required": ["audience", "baseUrl"],
      "type": "object"
    },
    "KeyAlgorithmInformation": {
      "description": "Key algorithm",
      "properties": {
        "allowedValues": {
          "description": "Key algorithm allowed values",
          "items": {
            "enum": [
              "RSA_2048",
              "RSA_3072",
              "RSA_4096",
              "EC_P256",
              "EC_P384",
              "EC_P521",
              "EC_ED25519"
            ],
            "type": "string"
          },
          "minItems": 1,
          "type": "array"
        },
        "defaultValue": {
          "description": "Key algorithm default value",
          "enum": [
            "RSA_2048",
            "RSA_3072",
            "RSA_4096",
            "EC_P256",
            "EC_P384",
            "EC_P521",
            "EC_ED25519"
          ],
          "example": "RSA_4096",
          "type": "string"
        }
      },
      "required": ["allowedValues", "defaultValue"],
      "type": "object"
    },
    "PolicyInformation": {
      "properties": {
        "companyId": {
          "description": "UUID specific to your company",
          "example": "03eb6e61-9806-11ed-84f2-c747fb71e467",
          "format": "uuid",
          "type": "string"
        },
        "creationDate": {
          "description": "When the policy was initially created",
          "example": "2022-10-10T14:50:41.710+00:00",
          "type": "string"
        },
        "extendedKeyUsages": {
          "description": "Extended key usages",
          "example": ["CLIENT_AUTH", "SERVER_AUTH"],
          "items": {
            "enum": [
              "ANY",
              "SERVER_AUTH",
              "CLIENT_AUTH",
              "CODE_SIGNING",
              "EMAIL_PROTECTION",
              "IPSEC_ENDSYSTEM",
              "IPSEC_TUNNEL",
              "IPSEC_USER",
              "TIME_STAMPING",
              "OCSP_SIGNING",
              "DVCS",
              "SBGP_CERT_AA_SERVER_AUTH",
              "SCVP_RESPONDER",
              "EAP_OVER_PPP",
              "EAP_OVER_LAN",
              "SCVP_SERVER",
              "SCVP_CLIENT",
              "IPSEC_IKE",
              "CAPWAP_AC",
              "CAPWAP_WTP",
              "IPSEC_IKE_INTERMEDIATE",
              "SMARTCARD_LOGON"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "UUID of the policy",
          "example": "8ae92800-b1e0-11ed-859d-b39255f965ee",
          "format": "uuid",
          "type": "string"
        },
        "keyAlgorithm": {
          "$ref": "#/$defs/KeyAlgorithmInformation"
        },
        "keyUsages": {
          "description": "Key usages",
          "example": ["keyEncipherment", "digitalSignature"],
          "items": {
            "enum": [
              "digitalSignature",
              "nonRepudiation",
              "keyEncipherment",
              "dataEncipherment",
              "keyAgreement",
              "keyCertSign",
              "cRLSign",
              "encipherOnly",
              "decipherOnly"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "modificationDate": {
          "description": "When the policy was last modified",
          "example": "2023-12-12T20:00:10.500+00:00",
          "type": "string"
        },
        "name": {
          "description": "Name of the policy",
          "example": "Some policy",
          "type": "string"
        },
        "sans": {
          "$ref": "#/$defs/SansInformation"
        },
        "subject": {
          "$ref": "#/$defs/SubjectAttributesInformation"
        },
        "validityPeriod": {
          "description": "ISO8601 Period Format",
          "example": "P30D",
          "format": "PnYnMnDTnHnMnS",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PropertyInformation": {
      "properties": {
        "allowedValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "defaultValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "maxOccurrences": {
          "format": "int32",
          "type": "integer"
        },
        "minOccurrences": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "enum": ["IGNORED", "FORBIDDEN", "OPTIONAL", "REQUIRED", "LOCKED"],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SansInformation": {
      "description": "Subject alternative names",
      "properties": {
        "dnsNames": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "ipAddresses": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "rfc822Names": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "uniformResourceIdentifiers": {
          "$ref": "#/$defs/PropertyInformation"
        }
      },
      "type": "object"
    },
    "Scope": {
      "description": "The service account authorization scopes",
      "example": "distributed-issuance",
      "type": "string"
    },
    "ServiceAccountBaseObject": {
      "allOf": [
        {
          "$ref": "#/$defs/ServiceAccountBaseObjectNoKey"
        },
        {
          "properties": {
            "publicKey": {
              "description": "The client generated public key",
              "maxLength": 2000,
              "type": "string"
            }
          },
          "type": "object"
        }
      ]
    },
    "ServiceAccountBaseObjectNoKey": {
      "properties": {
        "applications": {
          "description": "The list of applications for which the account is authorized",
          "example": [
            "dc96438b-7a80-464b-a09b-9e5ec746c3e3",
            "5bce5ff4-a69b-4e78-9b7e-6d4029995000"
          ],
          "items": {
            "$ref": "#/$defs/Application"
          },
          "type": "array",
          "uniqueItems": true
        },
        "audience": {
          "description": "The intended audience or recipients of the entity",
          "example": "Audience",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "authenticationType": {
          "description": "Type of authentication used in the scope. Currently supporting two types rsaKey and ociToken",
          "example": "rsaKey",
          "type": "string"
        },
        "companyId": {
          "description": "The UUID of the company/tenant",
          "format": "UUID",
          "type": "string",
          "x-go-type": "uuid.UUID",
          "x-go-type-import": {
            "path": "github.com/google/uuid"
          }
        },
        "credentialLifetime": {
          "description": "The number of days for which the credentials will be valid before expiring and requiring renewal",
          "example": 365,
          "maximum": 365,
          "minimum": 1,
          "type": "integer"
        },
        "issuerURL": {
          "description": "The URL of the entity issuer, providing the source or origin",
          "example": "https://accounts.google.com/",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "jwksURI": {
          "description": "The URI pointing to the JSON Web Key Set (JWKS) for the entity, facilitating secure authentication",
          "example": "https://www.googleapis.com/oauth2/v3/certs",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "description": "User friendly name for the given account",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "owner": {
          "description": "The UUID of the owning team",
          "format": "UUID",
          "type": "string",
          "x-go-type": "uuid.UUID",
          "x-go-type-import": {
            "path": "github.com/google/uuid"
          }
        },
        "scopes": {
          "description": "The list of scopes for which the account is authorized",
          "example": ["distributed-issuance"],
          "items": {
            "$ref": "#/$defs/Scope"
          },
          "minItems": 1,
          "type": "array",
          "uniqueItems": true
        },
        "subject": {
          "description": "The subject of the entity, representing the main topic or title.",
          "example": "Subject",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubCaProviderInformation": {
      "properties": {
        "caAccountId": {
          "description": "UUID of the CA account used by this Sub CA provider",
          "example": "4ece3180-b1e0-11ed-862d-ad36b18e787a",
          "format": "uuid",
          "type": "string"
        },
        "caProductOptionId": {
          "description": "UUID of the CA product option used by this Sub CA provider",
          "example": "6b3d8d20-b1e0-11ed-9c2f-953e35982bbd",
          "format": "uuid",
          "type": "string"
        },
        "caType": {
          "description": "Type of CA this Sub CA provider works with",
          "enum": [
            "MOCKCA",
            "DIGICERT",
            "GLOBALSIGN",
            "BUILTIN",
            "ENTRUST",
            "MICROSOFT",
            "ACME",
            "ZTPKI",
            "GLOBALSIGNMSSL",
            "TPP"
          ],
          "example": "BUILTIN",
          "type": "string"
        },
        "commonName": {
          "description": "Common name",
          "example": "example.com",
          "type": "string"
        },
        "companyId": {
          "description": "UUID specific to your company",
          "example": "03eb6e61-9806-11ed-84f2-c747fb71e467",
          "format": "uuid",
          "type": "string"
        },
        "country": {
          "description": "Country",
          "example": "US",
          "type": "string"
        },
        "creationDate": {
          "description": "When the Sub CA provider was initially created",
          "example": "2022-10-10T14:50:41.710+00:00",
          "type": "string"
        },
        "id": {
          "description": "UUID of the Sub CA provider",
          "example": "2f3c6030-b1e0-11ed-a3ed-e3dbaf56a746",
          "format": "uuid",
          "type": "string"
        },
        "keyAlgorithm": {
          "description": "Key algorithm type",
          "enum": [
            "RSA_2048",
            "RSA_3072",
            "RSA_4096",
            "EC_P256",
            "EC_P384",
            "EC_P521",
            "EC_ED25519"
          ],
          "example": "EC_P256",
          "type": "string"
        },
        "locality": {
          "description": "Locality",
          "example": "San Antonio",
          "type": "string"
        },
        "modificationDate": {
          "description": "When the Sub CA provider was last modified",
          "example": "2023-12-12T20:00:10.500+00:00",
          "type": "string"
        },
        "name": {
          "description": "Name of the Sub CA provider",
          "example": "Some Sub CA provider",
          "type": "string"
        },
        "organization": {
          "description": "Organization",
          "example": "Some organization",
          "type": "string"
        },
        "organizationalUnit": {
          "description": "Organizational unit",
          "example": "Some organizational unit",
          "type": "string"
        },
        "pkcs11": {
          "$ref": "#/$defs/SubCaProviderPkcs11ConfigurationInformation"
        },
        "stateOrProvince": {
          "description": "State or province",
          "example": "Texas",
          "type": "string"
        },
        "validityPeriod": {
          "description": "ISO8601 Period Format",
          "example": "P30D",
          "format": "PnYnMnDTnHnMnS",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubCaProviderPkcs11ConfigurationInformation": {
      "properties": {
        "allowedClientLibraries": {
          "description": "A collection of strings each of which represents SHA256 hash of an allowed HSM client library",
          "example": [
            "c34d199f2e30bb679cd9b8533b99975465aefe8b023be1b37972f1ab43ab7b2d"
          ],
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "partitionLabel": {
          "description": "HSM Partition Label",
          "example": "firefly-hsm-partition",
          "type": "string"
        },
        "partitionSerialNumber": {
          "description": "HSM Partition Serial Number",
          "example": "1444210958933",
          "pattern": "^[A-Fa-fx0-9]{0,18}$",
          "type": "string"
        },
        "pin": {
          "description": "HSM PIN",
          "example": "1234",
          "type": "string",
          "writeOnly": true
        },
        "signingEnabled": {
          "description": "Indicates whether HSM signing is enabled or not",
          "example": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "SubjectAttributesInformation": {
      "description": "Subject attributes",
      "properties": {
        "commonName": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "country": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "locality": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "organization": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "organizationalUnit": {
          "$ref": "#/$defs/PropertyInformation"
        },
        "stateOrProvince": {
          "$ref": "#/$defs/PropertyInformation"
        }
      },
      "type": "object"
    }
  },
  "$id": "https://example.com/certificate-config.schema.json",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "allOf": [
    {
      "properties": {
        "serviceAccounts": {
          "items": {
            "allOf": [
              {
                "$ref": "#/$defs/ServiceAccountBaseObject"
              },
              {
                "required": ["name", "scopes"],
                "type": "object"
              }
            ]
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    {
      "$ref": "#/$defs/ExtendedConfigurationInformation"
    }
  ],
  "description": "Schema for the Firefly configuration.",
  "title": "Firefly Configuration"
}
